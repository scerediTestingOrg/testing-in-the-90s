name: CI/CD Process
on:
  workflow_call:
    inputs:
      release:
        required: false
        type: string
        default: "false"
  workflow_dispatch:  # Optional, for direct invocation
    inputs:
      release:
        description: 'Trigger a release?'
        required: false
        default: 'false'
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022, macos-14]
        java-version: [17, 21, 23]
    runs-on: ${{ matrix.os }}
    env:
      ci: true
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.22
      - name: Set up JDK
        uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}
          cache: sbt
      - uses: sbt/setup-sbt@v1.1.11
      - name: Build and test
        shell: bash
        run: sbt +test

  code-style:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.22
      - name: Set up JDK
        uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - uses: sbt/setup-sbt@v1.1.11
      - name: Compile
        shell: bash
        run: sbt compile
      - name: Check formatting
        shell: bash
        run: sbt scalafmtCheckAll
      - name: Run linter
        shell: bash
        run: sbt "scalafixAll --check"

  dry-website-build:
    runs-on: ubuntu-24.04
    outputs:
      scala_version: ${{ steps.scala-version.outputs.version }}
    steps:
      - name: Checkout
        uses: danysk/action-checkout@0.2.22
      - name: Setup scala
        uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - uses: sbt/setup-sbt@v1.1.11
      - name: Build scaladoc
        shell: bash
        run: sbt doc
      - name: Extract Scala version
        id: scala-version
        run: |
          echo "version=$(sbt 'show scalaVersion' | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' | tail -n 1)" >> "$GITHUB_OUTPUT"
      - name: Test website generation
        run: |
          cd docs
          npm ci
          npm run build

  release:
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' && inputs.release == 'true'
    permissions:
      contents: write
      packages: write
    outputs:
      has_released: ${{ env.HAS_RELEASED }}
      release_version: ${{ env.RELEASE_VERSION }}
    concurrency:
      group: release-${{ github.event.number || github.ref }}
    runs-on: ubuntu-24.04
    needs:
      - build
      - code-style
      - dry-website-build
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          persist-credentials: false
      - name: Setup node
        uses: actions/setup-node@v4.4.0
        with:
          cache: npm
          node-version: lts/*
      - run: npm ci
      - name: Setup scala
        uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - uses: sbt/setup-sbt@v1.1.11
      - name: Assembly fatjar
        run: |
            sbt assembly
            mkdir -p target/fatjar
            mv target/scala-${{ needs.dry-website-build.outputs.scala_version }}/root-assembly-*.jar target/fatjar/${{ github.event.repository.name }}.jar
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release

  upload-docs:
    concurrency:
      # Only one release job at a time. Strictly sequential.
      group: upload-docs-${{ github.event.number || github.ref }}
    runs-on: ubuntu-24.04
    needs:
      - build
      - code-style
      - dry-website-build
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.22
      - name: Setup node
        uses: actions/setup-node@v4.4.0
        with:
          cache: npm
          node-version: lts/*
      - name: Set up JDK
        uses: actions/setup-java@v4.7.1
        with:
          distribution: temurin
          java-version: 21
          cache: sbt
      - uses: sbt/setup-sbt@v1.1.11
      - name: Generate ScalaDoc
        run: sbt doc
      - name: Generate doc website
        run: | 
            cd docs
            npm install
            npm run build
            if [ -d ../target/scala-${{ needs.dry-website-build.outputs.scala_version }}/api/ ]
            then
              mv ../target/scala-${{ needs.dry-website-build.outputs.scala_version }}/api/ ./build/
            fi
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: docs/build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  success:
    runs-on: ubuntu-24.04
    needs:
      - build
      - dry-website-build
      - release
      - upload-docs
      - code-style
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
