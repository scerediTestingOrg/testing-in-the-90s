#!/usr/bin/env bash

# Colors for output formatting
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[0;33m'
PURPLE='\033[0;35m'
NC='\033[0m'

echo -e "${BLUE}Running pre-commit checks...${NC}"

# Initialize error tracking
errors=0
error_messages=""

# Function to run a check and track its status
run_check() {
    local check_name="$1"
    local check_command="$2"
    
    echo -e "\n${YELLOW}Running $check_name...${NC}"
    
    # Run the command and capture both exit code and output
    output=$(eval "$check_command" 2>&1)
    exit_code=$?
    
    if [ $exit_code -eq 0 ]; then
        echo -e "${GREEN}✓ $check_name passed${NC}"
        return 0
    else
        echo -e "${RED}✗ $check_name failed${NC}"
        error_messages+="
${RED}[$check_name Error]${NC}
$output
"
        errors=$((errors + 1))
        return 1
    fi
}

# Run scalafmt check
run_check "scalafmt" "sbt scalafmtCheckAll"

# Run scalafix check
run_check "scalafix" "sbt 'scalafixAll --check'"

# Run tests
run_check "tests" "sbt test"

# Show summary
if [ $errors -gt 0 ]; then
    echo -e "\n${RED}Failed with $errors errors:${NC}"
    echo -e "$error_messages"
    echo -e "\n${YELLOW}Commit aborted. Please fix the issues and try again.${NC}"
    exit 1
else
    echo -e "\n${GREEN}All checks passed successfully!${NC}"
    exit 0
fi
